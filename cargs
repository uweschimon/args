#!/bin/sh
# 2da6837fde0a5a4e6dae85444ff06390
# uwe.schimon@mailpost.de 20211114 1201 02 05 08 12
# arg-function generator, depend of $usage

cargs() {
 FILE="$1/args.sh"
# echo "FILE=$FILE"
 USAGE=`cat "$1/args.usage"`
 ARGUSAGE=`cat "$1/args.usage" | sed "s/\[/\{/g" | sed "s/\]/\}/g"`
 echo "#!/bin/sh
# uwe.schimon@mailpost.de autogenerated script to manage arguments from commandline
#set -x
A=\"\"
args() {
USAGE=\"Usage: \$0 $USAGE\"
if [ -z \"\$1\" ]; then echo \"Usage: \$0 \$USAGE\"
else
 for arg in \"\$@\"; do
  case \$arg in
        -#) A=true; shift;;
        -:) A=\"\"; shift;;" > $FILE
for i in $ARGUSAGE; do
# if [ `echo $i | grep '='` ]; then echo "value"; else echo "flag"; fi
# if [ `echo $i | cut -c -1` = "[" ]; then echo "optional"; else echo "mandatarity"; fi

 if [ `echo $i | grep '='` ]; then
  echo $i | sed -E "s/[^a-zA-Z_\|]//g" | awk -F'|' '{print "\t-" $1 "=*|--" $2 "=*)\t" toupper($1) "=\"\$\{arg#*=\}\";\t" toupper($2) "=\"\$" \
toupper($1) "\";\tif [ $A ]; then echo " toupper($2) "=" toupper($1) "=\"\$" toupper($1) "\"; fi;  shift ;;"}' >> $FILE 2>/dev/null
 else
 echo $i | sed -E "s/[^a-zA-Z_\|]//g" | awk -F'|' '{print "\t-" $1 "|--" $2 ")\t" toupper($1) "=\"1\";\t" toupper($2) "=\"\$" \
toupper($1) "\";\tif [ $A ]; then echo " toupper($2) "=" toupper($1) "=\"\$" toupper($1) "\"; fi;  shift ;;"}' >> $FILE 2>/dev/null
 fi
done
echo "  esac
 done
fi
}">>$FILE
 chmod +x $FILE
}
